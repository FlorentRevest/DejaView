# Copyright (C) 2022 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file is automatically generated by tools/gen_bazel. Do not edit.

load("@dejaview_cfg//:dejaview_cfg.bzl", "DEJAVIEW_CONFIG")
load(
    "@dejaview//bazel:rules.bzl",
    "dejaview_py_binary",
    "dejaview_py_library",
)

licenses(["notice"])

package(default_visibility = [DEJAVIEW_CONFIG.root + ":__subpackages__"])

# GN target: //python:batch_trace_processor
dejaview_py_library(
    name = "batch_trace_processor",
    srcs = [
        "dejaview/batch_trace_processor/__init__.py",
        "dejaview/batch_trace_processor/api.py",
        "dejaview/batch_trace_processor/platform.py",
    ],
    visibility = [
        "//visibility:public",
    ],
    deps = [
               ":trace_processor_py",
           ] + DEJAVIEW_CONFIG.deps.pandas_py +
           DEJAVIEW_CONFIG.deps.tp_vendor_py,
)

# GN target: //python:experimental_slice_breakdown_bin
dejaview_py_binary(
    name = "experimental_slice_breakdown_bin",
    srcs = [
        "tools/slice_breakdown.py",
    ],
    deps = [
        ":experimental_slice_breakdown_lib",
        ":trace_processor_py",
    ] + DEJAVIEW_CONFIG.deps.pandas_py,
    main = "tools/slice_breakdown.py",
    python_version = "PY3",
)

# GN target: //python:trace_processor_table_generator
dejaview_py_library(
    name = "trace_processor_table_generator",
    srcs = [
        "generators/trace_processor_table/public.py",
        "generators/trace_processor_table/serialize.py",
        "generators/trace_processor_table/util.py",
    ],
)

# GN target: //python:trace_processor_py_example
dejaview_py_binary(
    name = "trace_processor_py_example",
    srcs = [
        "example.py",
    ],
    deps = [
        ":trace_processor_py",
    ] + DEJAVIEW_CONFIG.deps.pandas_py,
    main = "example.py",
    python_version = "PY3",
)

# GN target: //python:sql_processing
dejaview_py_library(
    name = "sql_processing",
    srcs = [
        "generators/sql_processing/docs_extractor.py",
        "generators/sql_processing/docs_parse.py",
        "generators/sql_processing/utils.py",
    ],
)

# GN target: //python:common
dejaview_py_library(
    name = "common",
    srcs = [
        "dejaview/common/exceptions.py",
        "dejaview/common/query_result_iterator.py",
    ],
)

# GN target: //python:experimental_slice_breakdown_lib
dejaview_py_library(
    name = "experimental_slice_breakdown_lib",
    srcs = [
        "dejaview/experimental/slice_breakdown/__init__.py",
        "dejaview/experimental/slice_breakdown/breakdown.py",
    ],
    deps = [
        ":trace_processor_py",
    ],
)

# GN target: //python:trace_processor_py
dejaview_py_library(
    name = "trace_processor_py",
    visibility = [
        "//visibility:public",
    ],
    deps = [
        ":trace_processor_py_no_resolvers",
    ] + DEJAVIEW_CONFIG.deps.tp_resolvers_py,
)

# GN target: //python:trace_processor_py_no_resolvers
dejaview_py_library(
    name = "trace_processor_py_no_resolvers",
    srcs = [
        "dejaview/trace_processor/__init__.py",
        "dejaview/trace_processor/api.py",
        "dejaview/trace_processor/http.py",
        "dejaview/trace_processor/platform.py",
        "dejaview/trace_processor/protos.py",
        "dejaview/trace_processor/shell.py",
    ],
    visibility = [
        "//visibility:public",
    ],
    data = [
        DEJAVIEW_CONFIG.root + ":trace_processor_shell",
        "dejaview/trace_processor/metrics.descriptor",
        "dejaview/trace_processor/trace_processor.descriptor",
    ],
    deps = [
               ":common",
               ":trace_uri_resolver",
           ] + DEJAVIEW_CONFIG.deps.pandas_py +
           DEJAVIEW_CONFIG.deps.protobuf_py +
           DEJAVIEW_CONFIG.deps.tp_vendor_py,
    tags = [
        "avoid_dep",
    ],
)

# GN target: //python:trace_uri_resolver
dejaview_py_library(
    name = "trace_uri_resolver",
    srcs = [
        "dejaview/trace_uri_resolver/__init__.py",
        "dejaview/trace_uri_resolver/path.py",
        "dejaview/trace_uri_resolver/registry.py",
        "dejaview/trace_uri_resolver/resolver.py",
        "dejaview/trace_uri_resolver/util.py",
    ],
)

